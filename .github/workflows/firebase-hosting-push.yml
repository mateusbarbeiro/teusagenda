name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: üìö Git Checkout
        uses: actions/checkout@v3
      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - name: üîë Create $HOME/private
        run: |
          mkdir $HOME/private
      - name: üîë Resolve google-services.json
        env:
          FIREBASE_SECRET_ENCRYPT: ${{ secrets.FIREBASE_SECRET_ENCRYPT }}
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$FIREBASE_SECRET_ENCRYPT" \
          --output $HOME/private/services.tar services.tar.gpg
          tar xvf $HOME/private/services.tar
      - name: üîë Resolve firebase.json
        env:
          FIREBASE_SECRET_ENCRYPT: ${{ secrets.FIREBASE_SECRET_ENCRYPT }}
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$FIREBASE_SECRET_ENCRYPT" \
          --output $HOME/private/firebaseconfig.tar firebaseconfig.tar.gpg
          tar xvf $HOME/private/firebaseconfig.tar
      - name: üì¶ Install Dependencies
        run: |
          flutter pub get
      - name: üõ†Ô∏è Build the application
        env:
          WEB_API_KEY: ${{ secrets.WEB_API_KEY }}
          WEB_APP_ID: ${{ secrets.WEB_APP_ID }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
        run: flutter build web --dart-define=WEB_API_KEY="$env:WEB_API_KEY" --dart-define=WEB_APP_ID="$env:WEB_APP_ID" \
          --dart-define=MESSAGING_SENDER_ID="$env:MESSAGING_SENDER_ID" \ 
          -t lib/main.dart
      - name: üéØ Deploy to firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TEUS_AGENDA }}
          channelId: live
          projectId: teus-agenda
          workingDirectory: build/web
