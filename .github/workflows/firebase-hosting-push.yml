# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Analyze, Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  semantic-pull-request:
    name: "Semantic"
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

#  analyze:
#    name: "Analyze"
#    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/flutter_package.yml@v1
#    with:
#      flutter_channel: stable


  build:
    name: Build
    needs: [semantic-pull-request]
    runs-on: ubuntu-latest
    steps:
      - name: üìö Git Checkout
        uses: actions/checkout@v3
      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.4.3
      - name: üîë Resolve google-services.json
        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET_ENCRYPT }}
        run: |
          mkdir $HOME/private
          gpg --quiet --batch --yes --decrypt --passphrase="$FIREBASE_SECRET_ENCRYPT" \
          --output $HOME/private/services.tar services.tar.gpg
          tar xvf $HOME/private/services.tar
      - name: üîë Resolve firebase.json
        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET_ENCRYPT }}
        run: |
          mkdir $HOME/private
          gpg --quiet --batch --yes --decrypt --passphrase="$FIREBASE_SECRET_ENCRYPT" \
          --output $HOME/private/firebaseconfig.tar firebaseconfig.tar.gpg
          tar xvf $HOME/private/firebaseconfig.tar
      - name: üì¶ Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good --analytics false
          very_good packages get --recursive
      - name: üõ†Ô∏è Build the application
        env:
          ANDROID_API_KEY: ${{ secrets.ANDROID_API_KEY }}
          ANDROID_APP_ID: ${{ secrets.ANDROID_APP_ID }}
          IOS_API_KEY: ${{ secrets.IOS_API_KEY }}
          IOS_APP_ID: ${{ secrets.IOS_APP_ID }}
          MACOS_API_KEY: ${{ secrets.MACOS_API_KEY }}
          MACOS_APP_ID: ${{ secrets.MACOS_APP_ID }}
          WEB_API_KEY: ${{ secrets.WEB_API_KEY }}
          WEB_APP_ID: ${{ secrets.WEB_APP_ID }}
          WINDOWS_API_KEY: ${{ secrets.WINDOWS_API_KEY }}
          WINDOWS_APP_ID: ${{ secrets.WINDOWS_APP_ID }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
        run: flutter build web --dart-define=ANDROID_API_KEY="$env:ANDROID_API_KEY"
          --dart-define=ANDROID_APP_ID="$env:ANDROID_APP_ID"
          --dart-define=IOS_API_KEY="$env:IOS_API_KEY" 
          --dart-define=IOS_APP_ID="$env:IOS_APP_ID" 
          --dart-define=MACOS_API_KEY="$env:MACOS_API_KEY" 
          --dart-define=MACOS_APP_ID="$env:MACOS_APP_ID" 
          --dart-define=WEB_API_KEY="$env:WEB_API_KEY" 
          --dart-define=WEB_APP_ID="$env:WEB_APP_ID" 
          --dart-define=WINDOWS_API_KEY="$env:WINDOWS_API_KEY" 
          --dart-define=WINDOWS_APP_ID="$env:WINDOWS_APP_ID" 
          --dart-define=MESSAGING_SENDER_ID="$env:MESSAGING_SENDER_ID" -t lib/main.dart
      - name: ‚¨áÔ∏è Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build/web

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: üìö Checkout repo
        uses: actions/checkout@v3
      - name: ‚¨áÔ∏è Download Artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build/web
      - name: üéØ Deploy to firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TEUS_AGENDA }}
          channelId: live
          projectId: teus-agenda